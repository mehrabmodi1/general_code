%
%example input parameters
eg_cell_params = [0.0989, 1.8360, 0.7674, -4.0740, 4.1236, 0.3000, 8.8270, 8];
eg_train = [0, 10];

n_frames = 250;
stim_latency = 100;
t = (1:1:n_frames)';

curr_cell_params = eg_cell_params;
curr_train = eg_train;

a0 = curr_cell_params(1);
a1 = curr_cell_params(2);
a2 = curr_cell_params(3) ;
a3 = curr_cell_params(4);
t0 = curr_cell_params(5);
t1 = curr_cell_params(6);
t2 = curr_cell_params(7);
t3 = curr_cell_params(8);

curr_model_trace = zeros(n_frames, 1);
curr_pulse = curr_train(1, :);
curr_train_time = sum(sum(curr_train(1:(curr_pulse - 1), :)));
on_time = stim_latency + curr_train_time + curr_pulse(1, 1);                       %time from beginning of train to onset of current pulse
off_time = on_time + curr_pulse(1, 2);   %time from beginning of train to off of current pulse

%boolean vectors that define the three epochs of the responses
%to each pulse
domain0 = t <= on_time;
domain1 = (t > on_time) & (t <= off_time);
domain2 = t > off_time;


%constructing model response trace generated by current pulse
curr_model_trace = curr_model_trace + domain0.*(a0);
curr_model_trace = curr_model_trace + domain1.*(a1 .* (1.0 - exp(-(t - on_time) / t0))...
                                                + a2 .* (1.0 - exp(-(t - on_time) / t1))...
                                                + a0);

%computing a scalar adjustment factor                                                        
end1 = (a1 * (1.0 - exp(-on_time / t0))...
        + a2 * (1.0 - exp(-on_time / t1))...
        + a0);                       

%adding the odor off part of the modelled response    
curr_model_trace = curr_model_trace + domain2.*(a3 .* exp(-(t - off_time) / t2)...
                                                + (end1 - a3) .* exp(-(t - off_time) / t3));                                            

plot(curr_model_trace)