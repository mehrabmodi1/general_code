function [vial_switch,olfSS,ValveState]=connectToUSB6501_EP
% Modified from connectToUSB6501
%
% Connect to NI USB-6501
%
%
% Purpose
% Initiate a connection to the USB-6501 box. Configure all DIOs as output
% since we won't be recording anything from the tunnels using DIO. 
%
%Output
%   vial_switch: Look up table for vial-switch-port
%   olfSS: session object for olfactometer
%   ValveState: vector for state of channels added to olfSS
%
% See also FlipValve_EP.m
%

%Look-up table for which vial/valve is connected to which switch
%The first column will be defined as the LineName of each line later


%Note: if DAQ already in use and not closed properly the last time, use
%daqreset. Close scanimage first and then restart after resetting.

vial_switch={'Vial1',2,'port0/line1';...
    'Vial2',3,'port0/line2';...
    'Vial3',4,'port0/line3';...
    'Vial4',5,'port0/line4';...
    'Vial5',6,'port0/line5';...
    'Vial6',7,'port0/line6';...
    'Vial7',8,'port0/line7';...
    'Vial8',9,'port1/line0';...
    'Vial9',10,'port1/line1';...
    'Vial10',11,'port1/line2';...
    'Vial11',12,'port1/line3';...
    'Vial12',13,'port1/line4';...
    'NO',1,'port0/line0';...%this is normally open empty vial
    'Final',14,'port1/line5';...%This is final valve
    'Block',15,'port1/line6'};%This is the block valve for calibration 

%Look-up table for which switch is connected to which port/line of USB6501
%No longer needed but left for reference.
%
% switch_line={1,'port1/line2';...
%     2,'port1/line3';...
%     3,'port1/line1';...
%     4,'port2/line5';...
%     5,'port1/line0';...
%     6,'port2/line6';...
%     7,'port0/line7';...
%     8,'port2/line7';...
%     9,'port0/line6';...
%     10,'port1/line4';...
%     11,'port0/line5';...
%     12,'port1/line5';...
%     13,'none';...
%     14,'port1/line6';...
%     15,'none';...
%     16,'port1/line7'};


HWlist=daq.getDevices;

for i=1:length(HWlist)
    if strcmpi(HWlist(i).Model,'USB-6501')
        NIdaq.dev=HWlist(i).ID;
    end
end
if ~isfield(NIdaq,'dev')
    error('Cannot connect to USB-6501')
end

olfSS=daq.createSession('ni');
warning('off')
olfSS.addDigitalChannel(NIdaq.dev,vial_switch(:,3),'Outputonly');
warning('on')
ValveState=ones(1,length(olfSS.Channels));
outputSingleScan(olfSS,ValveState);%Make sure default is all low-energy state
end